"""Initial migration

Revision ID: db9f79c00de2
Revises: 
Create Date: 2025-05-29 14:31:16.136366

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'db9f79c00de2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ingredients',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('quantity_grams', sa.Float(), nullable=False),
    sa.Column('minimum_threshold', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(length=20), nullable=False),
    sa.Column('delivery_date', sa.Date(), nullable=True),
    sa.Column('expiry_date', sa.Date(), nullable=True),
    sa.Column('supplier', sa.String(length=100), nullable=True),
    sa.Column('cost_per_unit', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=100), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('inventory_logs',
    sa.Column('ingredient_id', sa.Integer(), nullable=False),
    sa.Column('change_amount', sa.Float(), nullable=False),
    sa.Column('change_type', sa.Enum('delivery', 'consumption', 'waste', 'adjustment', name='changetype'), nullable=False),
    sa.Column('reason', sa.String(length=255), nullable=False),
    sa.Column('reference_id', sa.Integer(), nullable=True),
    sa.Column('changed_by', sa.Integer(), nullable=False),
    sa.Column('previous_quantity', sa.Float(), nullable=False),
    sa.Column('new_quantity', sa.Float(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['changed_by'], ['users.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['ingredient_id'], ['ingredients.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('monthly_reports',
    sa.Column('month', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('total_portions_served', sa.Integer(), nullable=False),
    sa.Column('total_possible_portions', sa.Integer(), nullable=False),
    sa.Column('wastage_percentage', sa.Float(), nullable=False),
    sa.Column('total_ingredients_used', sa.Float(), nullable=False),
    sa.Column('total_cost', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('efficiency_score', sa.Float(), nullable=False),
    sa.Column('generated_at', sa.DateTime(), nullable=False),
    sa.Column('generated_by', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['generated_by'], ['users.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('month', 'year', name='_month_year_uc')
    )
    op.create_table('notifications',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('type', sa.Enum('info', 'warning', 'alert', 'success', name='notificationtype'), nullable=False),
    sa.Column('priority', sa.Enum('low', 'medium', 'high', 'critical', name='notificationpriority'), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('is_system_generated', sa.Boolean(), nullable=False),
    sa.Column('related_model', sa.String(length=50), nullable=True),
    sa.Column('related_id', sa.Integer(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('recipes',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('preparation_time', sa.Integer(), nullable=False),
    sa.Column('cooking_time', sa.Integer(), nullable=False),
    sa.Column('servings_count', sa.Integer(), nullable=False),
    sa.Column('difficulty_level', sa.Enum('easy', 'medium', 'hard', name='difficultylevel'), nullable=False),
    sa.Column('instructions', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('meal_logs',
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.Column('served_by', sa.Integer(), nullable=False),
    sa.Column('portions_served', sa.Integer(), nullable=False),
    sa.Column('served_at', sa.DateTime(), nullable=False),
    sa.Column('children_count', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('completed', 'cancelled', name='mealstatus'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['served_by'], ['users.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('recipe_ingredients',
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.Column('ingredient_id', sa.Integer(), nullable=False),
    sa.Column('required_grams', sa.Float(), nullable=False),
    sa.Column('is_optional', sa.Boolean(), nullable=False),
    sa.Column('notes', sa.String(length=255), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ingredient_id'], ['ingredients.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('recipe_id', 'ingredient_id', name='_recipe_ingredient_uc')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('recipe_ingredients')
    op.drop_table('meal_logs')
    op.drop_table('recipes')
    op.drop_table('notifications')
    op.drop_table('monthly_reports')
    op.drop_table('inventory_logs')
    op.drop_table('users')
    op.drop_table('ingredients')
    # ### end Alembic commands ###
